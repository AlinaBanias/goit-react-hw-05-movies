{"version":3,"file":"static/js/859.1749ee0f.chunk.js","mappings":"oLAUA,EATc,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aACf,OACE,mCAEGA,IAGN,C,8ECWA,EAfc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACjB,OACI,+BACA,SAAC,KAAD,CACAC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,QAASP,KAIZ,C,gGCDD,EAXkB,SAAC,GAAmB,IAAjBQ,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACfC,GAAWC,EAAAA,EAAAA,MACnB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAOJ,GAA3C,SACGD,KAIR,ECID,EAXkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACXL,GAAYC,EAAAA,EAAAA,MACpB,OACE,wBACGI,EAAOC,KAAI,gBAAGR,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,EAAD,CAAoBD,GAAIA,EAAIC,MAAOA,EAAOI,MAAO,CAAEC,KAAMJ,IAAzCF,EADN,KAKjB,C,0KC0BD,EApCa,WACX,OAA4CS,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOjB,EAAP,KAAkBoB,EAAlB,KACA,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOlB,EAAP,KAAqBsB,EAArB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FAClBH,GAAa,GADK,mBAGOI,EAAAA,EAAAA,MAHP,gBAGRC,EAHQ,EAGRA,KAEFC,EAAaD,EAAKE,QAAQX,KAAI,kBAAoB,CAAER,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,IACpCU,EAAkBO,GANF,kDAQhBL,EAAgB,KAAMO,SARN,yBAUhBR,GAAa,GAVG,6EAAH,qDAcjBG,GACD,GAAE,KAGD,6BACE,2CACCvB,GACC,SAAC6B,EAAA,EAAD,CAAQ7B,UAAWA,KAEnB,SAAC8B,EAAA,EAAD,CAAWf,OAAQG,IAEpBnB,IAAgB,SAACgC,EAAA,EAAD,CAAOhC,aAAcA,MAG3C,C,iUCvCKiC,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHe,iCAMXC,EAAS,CAAEC,OAAQ,CAAEC,QAASN,IAEvBR,EAAkB,mCAAG,oGACTS,EAAS,sBAAuBG,GADvB,cAC1BG,EAD0B,yBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMhC,GAAN,uFACHyB,EAAS,UAAD,OAAWzB,GAAM4B,GADtB,cACpBG,EADoB,yBAEnBA,EAASd,MAFU,2CAAH,sDAMZgB,EAAY,mCAAG,WAAMjC,GAAN,uFACHyB,EAAS,UAAD,OAAWzB,EAAX,YAAyB4B,GAD9B,cACpBG,EADoB,yBAEnBA,EAASd,MAFU,2CAAH,sDAKZiB,EAAe,mCAAG,WAAMlC,GAAN,uFACNyB,EAAS,UAAD,OAAWzB,EAAX,YAAyB4B,GAD3B,cACvBG,EADuB,yBAEtBA,EAASd,KAAKE,SAFQ,2CAAH,sDAKfgB,EAAW,mCAAG,WAAMC,GAAN,gFACnBC,EAAe,CAAER,OAAQ,CAAEC,QAASN,EAASY,MAAOA,IADjC,SAEFX,EAAS,gBAAiBY,GAFxB,cAEnBN,EAFmB,yBAGlBA,GAHkB,2CAAH,qD","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/movieAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst Error = ({ errorMessage }) => {\n  return (\n    <h1>\n      Ooops!\n      {errorMessage}\n    </h1>\n  );\n};\n\nexport default Error;\n\nError.propTypes = {\n  errorMessage: PropTypes.any,\n};","import PropTypes from 'prop-types';\nimport { Bars } from 'react-loader-spinner';\n\n\nconst Loader = ({isLoading}) => {\nreturn (\n    <> \n    <Bars\n    height=\"40\"\n    width=\"40\"\n    color=\"#280232\"\n    ariaLabel=\"bars-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={isLoading}\n  />\n  </>\n);\n}\n export default Loader;\n\nLoader.propTypes ={\n    isLoading: PropTypes.bool.isRequired,\n}","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\nconst MovieItem = ({ id, title }) => {\n    const location = useLocation();\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from : location}}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  state: PropTypes.object,\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport MovieItem from 'components/MovieItem';\n\n\n\nconst MovieList = ({ movies }) => {\n    const location =  useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id} id={id} title={title} state={{ from: location }} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  state: PropTypes.any,\n};","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovie } from 'services';\n\nimport Loader from 'components/Loader';                                                                                                                                                  \nimport MovieList from 'components/MovieList';\nimport Error from 'components/Error';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchTrendingMovie();\n\n        const movieArray = data.results.map(({ id, title }) => ({ id, title }));\n        setTrendingMovies(movieArray);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <h2>Trending today</h2>\n      {isLoading ? (\n        <Loader isLoading={isLoading}/>\n      ) : (\n        <MovieList movies={trendingMovies} />\n      )}\n      {errorMessage && <Error errorMessage={errorMessage} />}\n    </main>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '6251e629c61bceaf56a3d45f05637256';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n});\n\nconst config = { params: { api_key: API_KEY } };\n\nexport const fetchTrendingMovie = async () => {\n  const response = await movieApi('/trending/movie/day', config);\n  return response;\n};\n\nexport const getMovieById = async id => {\n  const response = await movieApi(`/movie/${id}`, config);\n  return response.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const response = await movieApi(`/movie/${id}/credits`, config);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await movieApi(`/movie/${id}/reviews`, config);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const searchConfig = { params: { api_key: API_KEY, query: query } };\n  const response = await movieApi('/search/movie', searchConfig);\n  return response;\n};\n\n"],"names":["errorMessage","isLoading","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","id","title","location","useLocation","to","state","from","movies","map","useState","trendingMovies","setTrendingMovies","setIsLoading","setErrorMessage","useEffect","fetchMovies","fetchTrendingMovie","data","movieArray","results","message","Loader","MovieList","Error","API_KEY","movieApi","axios","baseURL","config","params","api_key","response","getMovieById","getMovieCast","getMovieReviews","searchMovie","query","searchConfig"],"sourceRoot":""}