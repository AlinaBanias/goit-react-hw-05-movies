{"version":3,"file":"static/js/859.fa493ba9.chunk.js","mappings":"oLAUA,EATc,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aACf,OACE,mCAEGA,IAGN,C,sFCMD,EAVkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC9B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,0CAAqCH,GAAME,MAAOA,EAA1D,SACGD,KAIR,ECGD,EAVkB,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,OAAQF,EAAY,EAAZA,MAC3B,OACE,wBACGE,EAAOC,KAAI,gBAAGL,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,EAAD,CAAoBD,GAAIA,EAAIC,MAAOA,EAAOC,MAAOA,GAAjCF,EADN,KAKjB,C,oLCwCD,EA7Ca,WACX,OAA4CM,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOP,EAAP,KAAqBc,EAArB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FAClBH,GAAa,GADK,mBAGOI,EAAAA,EAAAA,MAHP,gBAGRC,EAHQ,EAGRA,KAEFC,EAAaD,EAAKE,QAAQd,KAAI,kBAAoB,CAAEL,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,IACpCO,EAAkBU,GANF,kDAQhBL,EAAgB,KAAMO,SARN,yBAUhBR,GAAa,GAVG,6EAAH,qDAcjBG,GACD,GAAE,KAGD,6BACE,2CACCJ,GACC,SAAC,KAAD,CACEU,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAGX,SAACC,EAAA,EAAD,CAAWxB,OAAQG,EAAgBL,MAAO,CAAE2B,KAAMpB,KAEnDV,IAAgB,SAAC+B,EAAA,EAAD,CAAO/B,aAAcA,MAG3C,C,iUCjDKgC,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHe,iCAMXC,EAAS,CAAEC,OAAQ,CAAEC,QAASN,IAEvBf,EAAkB,mCAAG,oGACTgB,EAAS,sBAAuBG,GADvB,cAC1BG,EAD0B,yBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMvC,GAAN,uFACHgC,EAAS,UAAD,OAAWhC,GAAMmC,GADtB,cACpBG,EADoB,yBAEnBA,EAASrB,MAFU,2CAAH,sDAMZuB,EAAY,mCAAG,WAAMxC,GAAN,uFACHgC,EAAS,UAAD,OAAWhC,EAAX,YAAyBmC,GAD9B,cACpBG,EADoB,yBAEnBA,EAASrB,MAFU,2CAAH,sDAKZwB,EAAe,mCAAG,WAAMzC,GAAN,uFACNgC,EAAS,UAAD,OAAWhC,EAAX,YAAyBmC,GAD3B,cACvBG,EADuB,yBAEtBA,EAASrB,KAAKE,SAFQ,2CAAH,sDAKfuB,EAAW,mCAAG,WAAMC,GAAN,gFACnBC,EAAe,CAAER,OAAQ,CAAEC,QAASN,EAASY,MAAOA,IADjC,SAEFX,EAAS,gBAAiBY,GAFxB,cAEnBN,EAFmB,yBAGlBA,GAHkB,2CAAH,qD","sources":["components/Error/Error.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/movieAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst Error = ({ errorMessage }) => {\n  return (\n    <h1>\n      Ooops!\n      {errorMessage}\n    </h1>\n  );\n};\n\nexport default Error;\n\nError.propTypes = {\n  errorMessage: PropTypes.any,\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ id, title, state }) => {\n  return (\n    <li>\n      <Link to={`/goit-react-hw-05-movies/movies/${id}`} state={state}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  state: PropTypes.object,\n};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MovieItem from 'components/MovieItem';\n\nconst MovieList = ({ movies, state }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id} id={id} title={title} state={state} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  state: PropTypes.any,\n};","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovie } from 'services';\nimport { useLocation } from 'react-router-dom';\nimport { Bars } from 'react-loader-spinner';\n\nimport MovieList from 'components/MovieList';\nimport Error from 'components/Error';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchTrendingMovie();\n\n        const movieArray = data.results.map(({ id, title }) => ({ id, title }));\n        setTrendingMovies(movieArray);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <h2>Trending today</h2>\n      {isLoading ? (\n        <Bars\n          height=\"40\"\n          width=\"40\"\n          color=\"#280232\"\n          ariaLabel=\"bars-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      ) : (\n        <MovieList movies={trendingMovies} state={{ from: location }} />\n      )}\n      {errorMessage && <Error errorMessage={errorMessage} />}\n    </main>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '6251e629c61bceaf56a3d45f05637256';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n});\n\nconst config = { params: { api_key: API_KEY } };\n\nexport const fetchTrendingMovie = async () => {\n  const response = await movieApi('/trending/movie/day', config);\n  return response;\n};\n\nexport const getMovieById = async id => {\n  const response = await movieApi(`/movie/${id}`, config);\n  return response.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const response = await movieApi(`/movie/${id}/credits`, config);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await movieApi(`/movie/${id}/reviews`, config);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const searchConfig = { params: { api_key: API_KEY, query: query } };\n  const response = await movieApi('/search/movie', searchConfig);\n  return response;\n};\n\n"],"names":["errorMessage","id","title","state","to","movies","map","useState","trendingMovies","setTrendingMovies","location","useLocation","isLoading","setIsLoading","setErrorMessage","useEffect","fetchMovies","fetchTrendingMovie","data","movieArray","results","message","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieList","from","Error","API_KEY","movieApi","axios","baseURL","config","params","api_key","response","getMovieById","getMovieCast","getMovieReviews","searchMovie","query","searchConfig"],"sourceRoot":""}